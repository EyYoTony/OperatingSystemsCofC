Homework 1 Answers - Alexander Swanson

1.1 -
Q.)
Suppose the hypothetical processor of Figure 1.3 also has two I/O instructions:
			0011 = Load AC from I/O
			0111 = Store AC to I/O
In these cases, the 12-bit address identifies a particular external device. 
Show the program execution (using the format of Figure 1.4) for the following program:
1. Load AC from device 5
2. Add contents of memory location 940
3. Store AC to device 6
Assume the next value retrieved from device 5 is 3, and location 940 contains a value of 2. 


A.) I've decided not to include the PC as it is arbitrary, and the instructions will be loaded into the IR in the fetch stage. 
    The other values are listed in the question. 
1. Instruction(Bin) - 0011000000000101, Instruction(Hex) - 3005
   AC - 0003
2. Instruction(Bin) - 0101100101000000, Instruction(Hex) - 5940
   AC - 0005
3. Instruction(Bin) - 0111000000000110, Instruction(Hex) - 7006
   AC - 0005


1.3 -
Q.) 
Consider a hypothetical 32-bit microprocessor having 32-bit instructions composed of two fields. The first byte contains the opcode, and the remainder an immediate operand or an operand address.
a. What is the maximum directly addressable memory capacity (in bytes)?
b. Discuss the impact on the system speed if the microprocessor bus has:
	1. a 32-bit local address bus and a 16-bit local data bus, or;
	2. a 64-bit local address bus and a 16-bit local data bus.
c. How many bits are needed for the program counter and the instruction register?


A.)
a. - There are 32 - 8 = 24 bits (3 bytes) to work with for the address. 
     The maximum directly addressable memory capacity would be 2^24 (16,777,215 in decimal)
b. - The local address bus is used to specify the memory address, while the local data bus holds the value that is being loaded from or stored to the register from the address bus. 
     1/2. Since the 16-bit local data bus stays the same, inceasing the size of the local address bus shouldn't change the system speed. As this only increases the amount of registers able to be referenced. 
          If the "local memory" is part of the main memory on the cpu however, then having more adressable memory in the cpu will make the system speed faster as it won't have to reach for slow memory outside of the cpu as often.   
c. - Since the instructions are 32 bits long, the IR needs to have 32 bits allocated to it. 
     The PC needs to have 24 bits as the maximum directly addressable memory is 24 bits long (3 bytes)


1.10 -
Q.)
Consider the following code:
  for (i = 0; i < 20; i++)
    for (j = 0; j < 10; j++)
      a[i] = a[i] * j
a. Give one example of the spacial locality in the code.
b. Give one example of the temporal locality in the code.

A.)
a. - Spactial locality is the tendency of execution to involve a number of memory locations that are clustered (usually sequential instructions). The example of spacial locality in this code is that the program will move sequentially through the array "a" which is probably stored as a cluster in the memory.
b. - Temporal locality is the tendency for a processor to access memory locations that have been used recently. The example of temporal locality in this code is that the program will write to the same a[i] location 10 times before it changes to the next one.

1.13 -
Q.)
A computer has a cache, main memory, and a disk used for virtual memory. If a referenced word is in the cache, 20 ns are required to access it. If it is in main memory but not in the cache, 60 ns are needed to load it into the cache (this includes the time to originally check the cache), then the reference is started again. If the word is not in the main memory, 12 ns are required to fetch the word from disk, followed by 60 ns to copy it to the cache, then the reference is started again. The cache hit ratio is 0.9 and the main memory hit ratio is 0.6. What is the average time in ns required to access a referenced word on this system.

A.)
The average time in ns required to access a referenced word on this system = 52.4ns
As H x T1 + (1-H) x (T1 + T2) = Ts (pg 36 textbook) 
Ts = Average (system) access time 
T1 = Access time of M1 (e.g. cache, disk cache)
T2 = Access time of M2 (e.g. main memory, disk)
H = Hit ratio (fraction of time reference is found in M1)
Find the average access time for the cache and main memory:
0.9 x 20ns + 0.1 x 80ns = 18ns + 8ns = 26ns
Then find the average access time for the whole system (w/ disk) (this is assuming that the main memory hit ratio is the ratio in which the referenced word has already not been found in cache memory)
0.6 x 26ns + 0.4 x 92ns = 15.6ns + 36.8ns = 52.4ns

2.2 -
Q.)
An I/O-bound program is one that, if run alone, would spend more time waiting for I/O than the processor. A processor-bound program is the opposite. Suppose a short-term scheduling algorithm favors those programs that have used little processor time in recent past. Explain why this algorithm favors I/O-bound programs and yet does not permanently deny processor time to processor-bound programs.

A.)


2.3 -
Q.)
Contrast the scheduling policies you might use when trying to optimize a time-sharing system with those you would use ti optimize a multiprogrammed branch system.

A.)


2.4 -
Q.)
What is the purpose of system calls, and how do system calls relate to the OS and to the concept of of dual-mode (kernal-mode and user-mode) operation?

A.)



